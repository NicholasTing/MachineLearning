#Data Preprocessing
#Importing dataset
dataset = read.csv('Data.csv')
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
setwd("~/Desktop/MachineLearning/Part 1 - Data Preprocessing")
#Importing dataset
dataset = read.csv('Data.csv')
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
dataset$Country = factor(dataset$Country,
levels=c('France','Spain','Germany'),
labels = c(1,2,3))
dataset
dataset$Purchased = factor(dataset$Purchased,
levels=c('No','Yes'),
labels = c(0,1))
dataset
dataset
install.packages('caTools')
library(caTools
library(caTools)
library("caTools", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
dataset = read.csv('Data.csv')
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
# Encoding categorical data
dataset$Country = factor(dataset$Country,
levels=c('France','Spain','Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels=c('No','Yes'),
labels = c(0,1))
# Splitting the training and test set
install.packages('caTools')
library(caTools)
set.seed(123)
install.packages("caTools")
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(test_set)
# Feature scaling
training_set = scale(training_set)
test_set = scale(test_set)
training_set[,2:3] = scale(training_set,[,2:3])
test_set[,2:3] = scale(test_set,[,2:3])
# Feature scaling
training_set[,2:3] = scale(training_set[,2:3])
test_set[,2:3] = scale(test_set[,2:3])
View(dataset)
View(dataset)
View(test_set)
View(training_set)
setwd("~/Desktop/MachineLearning/Part 2 - Regression/Section 4 - Simple Linear Regression")
dataset = read.csv('Salary_Data.csv')
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(training_set)
View(test_set)
View(training_set)
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
View(regressor)
View(regressor)
View(test_set)
View(test_set)
regressor
summary regressor
summary regressor
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
y_pred
View(test_set)
View(test_set)
install.packages('ggplot2')
library(ggplot2)
library(ggplot2)
ggplot() +
geom_point(aes(x=training_set$YearsExperience, y = training_set$Salary),
colour='red') +
geom_line(aes(x=training_set$YearsExperience, y = predict(regressor, newdata = training_set)))
library(ggplot2)
ggplot() +
geom_point(aes(x=training_set$YearsExperience, y = training_set$Salary),
colour='red') +
geom_line(aes(x=training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour='blue')
# install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x=training_set$YearsExperience, y = training_set$Salary),
colour='red') +
geom_line(aes(x=training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour='blue') +
ggtitle('Salary vs Experience (Training Set)') +
xlab('Years of Experience') +
ylab('Salary')
# Visualising the Test set results
# install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x=test_set$YearsExperience, y = test_set$Salary),
colour='red') +
geom_line(aes(x=training_set$YearsExperience, y = predict(regressor, newdata = test_set)),
colour='blue') +
ggtitle('Salary vs Experience (Test Set)') +
xlab('Years of Experience') +
ylab('Salary')
# Visualising the Test set results
# install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x=test_set$YearsExperience, y = test_set$Salary),
colour='red') +
geom_line(aes(x=training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour='blue') +
ggtitle('Salary vs Experience (Test Set)') +
xlab('Years of Experience') +
ylab('Salary')
